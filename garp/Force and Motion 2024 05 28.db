:- module('Force and Motion 2024 05 28', []).

%!  qspace(?ParameterInstance, ?ParameterDef, ?ValueList, ?Fail).

qspace(gravity1,gravity(object,gravity1,continuous,zp),[point(zero),plus],fail).
qspace(air_resistance1,air_resistance(object,air_resistance1,continuous,zp),[point(zero),plus],fail).
qspace(velocity1,velocity(object,velocity1,continuous,zp),[point(zero),plus],fail).
qspace(distance1,distance(object,distance1,continuous,zp),[point(zero),plus],fail).
qspace(net_force1,net_force(object,net_force1,continuous,zp),[point(zero),plus],fail).
qspace(acceleration1,acceleration(object,acceleration1,continuous,zp),[point(zero),plus],fail).


%!   input_state(-Dict).

input_state(_{air_resistance1:zero, distance1:zero, gravity1:plus, velocity1:zero}).


%!   qrel(?Rel).

qrel(equal(min(gravity1,air_resistance1),net_force1)).
qrel(prop_pos(net_force1,gravity1)).
qrel(prop_neg(net_force1,air_resistance1)).
qrel(prop_pos(acceleration1,net_force1)).
qrel(dir_q_correspondence(acceleration1,net_force1)).
qrel(inf_pos_by(velocity1,acceleration1)).
qrel(inf_pos_by(distance1,velocity1)).
qrel(prop_pos(air_resistance1,velocity1)).


%!   exogenous(?Quantity, ?Function).

exogenous(acceleration1, exogenous_steady).
exogenous(net_force1, exogenous_steady).
exogenous(distance1, exogenous_steady).
exogenous(velocity1, exogenous_steady).
exogenous(air_resistance1, exogenous_steady).
exogenous(gravity1, exogenous_steady).


%!   qstate(?State, ?Values).

qstate(1, _{acceleration1:d(plus, min, _, _), air_resistance1:d(zero, plus, _, _), distance1:d(zero, zero, _, _), gravity1:d(plus, zero, zero, _), net_force1:d(plus, min, _, _), velocity1:d(zero, plus, _, _)}).
qstate(2, _{acceleration1:d(plus, min, _, _), air_resistance1:d(plus, plus, _, _), distance1:d(zero, plus, _, _), gravity1:d(plus, zero, zero, _), net_force1:d(plus, min, _, _), velocity1:d(plus, plus, _, _)}).
qstate(3, _{acceleration1:d(plus, min, _, _), air_resistance1:d(plus, plus, _, _), distance1:d(plus, plus, _, _), gravity1:d(plus, zero, zero, _), net_force1:d(plus, min, _, _), velocity1:d(plus, plus, _, _)}).
qstate(4, _{acceleration1:d(zero, zero, _, _), air_resistance1:d(plus, zero, _, _), distance1:d(plus, plus, _, _), gravity1:d(plus, zero, zero, _), net_force1:d(zero, zero, _, _), velocity1:d(plus, zero, _, _)}).


%!   qstate_from(?State, ?From:list).

qstate_from(4, [3]).
qstate_from(3, [2]).
qstate_from(2, [1]).
qstate_from(1, [input]).


%!   qstate_to(?State, ?Cause).

qstate_to(4,[]).
qstate_to(
    3,
    [ to(cause([ to_point_below(acceleration1),
		 to_point_below(net_force1)
	       ]),
	 conditions(
	     [ par_values(
		   [ value(acceleration1,unk,plus,min),
		     value(net_force1,unk,plus,min)
		   ])
	     ]),
	 results([ par_relations(
		       [ d_smaller_or_equal(acceleration1,zero),
			 d_smaller_or_equal(net_force1,zero)
		       ]),
		   par_values(
		       [ value(acceleration1,unk,zero,_),
			 value(net_force1,unk,zero,_)
		       ])
		 ]),
	 to_state([4]),
	 closed)
    ]).
qstate_to(
    2,
    [ to(cause([to_interval_above(distance1)]),
	 conditions([par_values([value(distance1,unk,zero,plus)])]),
	 results([ par_relations([d_greater(distance1,zero)]),
		   par_values([value(distance1,unk,plus,_)])
		 ]),
	 to_state([3]),
	 closed)
    ]).
qstate_to(
    1,
    [ to(cause([ to_interval_above(velocity1),
		 to_interval_above(air_resistance1)
	       ]),
	 conditions(
	     [ par_values(
		   [ value(velocity1,unk,zero,plus),
		     value(air_resistance1,unk,zero,plus)
		   ])
	     ]),
	 results([ par_relations(
		       [ d_greater(velocity1,zero),
			 d_greater(air_resistance1,zero)
		       ]),
		   par_values(
		       [ value(velocity1,unk,plus,_),
			 value(air_resistance1,unk,plus,_)
		       ])
		 ]),
	 to_state([2]),
	 closed)
    ]).
